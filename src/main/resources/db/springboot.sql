-- MySQL Script generated by MySQL Workbench
-- 2019年08月28日 星期三 11时38分16秒
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema springboot
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema springboot
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `springboot` DEFAULT CHARACTER SET utf8mb4 ;
USE `springboot` ;

-- -----------------------------------------------------
-- Table `springboot`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `springboot`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  `role_code` VARCHAR(45) NOT NULL,
  `desc` VARCHAR(800) NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_roleCode` (`role_code` ASC))
ENGINE = InnoDB
COMMENT = '用户角色表';


-- -----------------------------------------------------
-- Table `springboot`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `springboot`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '用户表';


-- -----------------------------------------------------
-- Table `springboot`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `springboot`.`permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parent_id` INT NOT NULL COMMENT '父级ID',
  `permission_name` VARCHAR(45) NOT NULL COMMENT '权限名称',
  `permission_code` VARCHAR(45) NOT NULL COMMENT '权限代码',
  `url` VARCHAR(200) NOT NULL COMMENT '链接url',
  `method` VARCHAR(45) NOT NULL COMMENT '请求方式',
  `sequence` INT NOT NULL DEFAULT 1 COMMENT '排序号',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `springboot`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `springboot`.`user_role` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `fk_table1_user_idx` (`user_id` ASC),
  INDEX `fk_table1_role1_idx` (`role_id` ASC),
  CONSTRAINT `fk_table1_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `springboot`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `springboot`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `springboot`.`role_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `springboot`.`role_permission` (
  `role_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  INDEX `fk_role_permission_role1_idx` (`role_id` ASC),
  INDEX `fk_role_permission_permission1_idx` (`permission_id` ASC),
  CONSTRAINT `fk_role_permission_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `springboot`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `springboot`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
